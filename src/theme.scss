@import "~@angular/material/theming";
@import "~@covalent/core/theming/all-theme";

@include mat-core();

@mixin generic-property-viewer-theme($theme) {
  $is-dark: map-get($theme, is-dark);
  $dark-background: rgba(255, 255, 255, 0.1);
  $light-background: rgba(0, 0, 0, 0.1);

  app-generic-property-viewer {
    background: if($is-dark, $dark-background, $light-background);
  }
}

$primary: mat-palette($mat-purple, 700, 500, 800);
$accent: mat-palette($mat-green, A200, A100, A400);

$warn: mat-palette($mat-red, 600, 100, 900);

$light-theme: mat-light-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
    ),
  )
);
$dark-theme: mat-dark-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
    ),
  )
);

@include angular-material-theme($dark-theme);
@include covalent-theme($dark-theme);
@include generic-property-viewer-theme($dark-theme);

app-root {
  &:not(.light-theme) {
    td-json-formatter.on-background {
      .td-json-formatter-wrapper {
        .key {
          color: mat-color($accent);
        }
        .value {
          .function {
            color: mat-color($accent);
          }
          .number,
          .boolean {
            color: mat-color($primary, 200);
          }
        }
      }
    }
  }
  td-json-formatter.on-background {
    .td-json-formatter-wrapper {
      .value {
        .number,
        .boolean {
          color: mat-color($accent, 800);
        }
      }
    }
  }
}

.light-theme {
  @include angular-material-theme($light-theme);
  @include covalent-theme($light-theme);
  @include generic-property-viewer-theme($light-theme);
}
